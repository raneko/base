; Template for INI file
; All key in this example is to be implemented
; Boolean value is represented by string "true" or "false"
; Multi value is separated by comma "," e.g. "red,green,blue"

[production]
; Database configuration
db.transaction.host = "127.0.0.1"
db.transaction.dbname = "sb_db"
db.transaction.username = "root"
db.transaction.password = ""
db.transaction.port = "3306"
db.transaction.charset = "utf8"
db.readonly.host = "127.0.0.1"
db.readonly.dbname = "db_db"
db.readonly.username = "root"
db.readonly.password = ""
db.readonly.port = "3306"
db.readonly.charset = "utf8"
; application configuration
app.api.hash.check = "true"; Indicates whether hash value should be checked.
app.api.hash.exclusion = "action, extension, module, controller, api_hash"; Indicates fields to be excluded for hash checking.
app.log.exclusion.request = "password"; Indicates fields from $_REQUEST to be excluded/masked for logging.
app.log.inclusion.server = "SERVER_NAME, SERVER_ADDR, HTTP_USER_AGENT, HTTP_HOST, HTTP_COOKIE, REMOTE_ADDR, REQUEST_TIME"; Indicates fields from $_SERVER to be included for logging.
app.aes.key = "4mLWT3W5oTMbw3S7"; Default key to be used for encryption. Becareful when changing this value after application is running as it might render data useless.
app.token.name = "token"; GET/POST field in which the token is stored. e.g. $_REQUEST["token"] -> "token".

[testing : production]

[development : production]
